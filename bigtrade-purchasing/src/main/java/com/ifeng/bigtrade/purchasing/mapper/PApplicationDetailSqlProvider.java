package com.ifeng.bigtrade.purchasing.mapper;

import com.ifeng.bigtrade.purchasing.entites.PApplicationDetail;
import com.ifeng.bigtrade.purchasing.entites.PApplicationDetailExample.Criteria;
import com.ifeng.bigtrade.purchasing.entites.PApplicationDetailExample.Criterion;
import com.ifeng.bigtrade.purchasing.tools.CommUtil;
import com.ifeng.bigtrade.purchasing.entites.PApplicationDetailExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;

public class PApplicationDetailSqlProvider
{

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String countByExample(PApplicationDetailExample example)
	{
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("p_applicationdetail");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String deleteByExample(PApplicationDetailExample example)
	{
		SQL sql = new SQL();
		sql.DELETE_FROM("p_applicationdetail");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String insertSelective(PApplicationDetail record)
	{
		SQL sql = new SQL();
		sql.INSERT_INTO("p_applicationdetail");
		if (record.getId() != null)
		{
			sql.VALUES("id", "#{id,jdbcType=BIGINT}");
		}
		if (record.getAddTime() != null)
		{
			sql.VALUES("addTime", "#{addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.VALUES("deleteStatus", "#{deleteStatus,jdbcType=BIT}");
		}
		if (record.getCommodityId() != null)
		{
			sql.VALUES("commodityId", "#{commodityId,jdbcType=BIGINT}");
		}
		if (record.getFirmId() != null)
		{
			sql.VALUES("firmId", "#{firmId,jdbcType=BIGINT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.VALUES("issuanceplan_id", "#{issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getCount() != null)
		{
			sql.VALUES("count", "#{count,jdbcType=INTEGER}");
		}
		if (record.getTotalAmount() != null)
		{
			sql.VALUES("totalAmount", "#{totalAmount,jdbcType=DECIMAL}");
		}
		if (record.getBrokerage() != null)
		{
			sql.VALUES("brokerage", "#{brokerage,jdbcType=DECIMAL}");
		}
		if (record.getStatus() != null)
		{
			sql.VALUES("status", "#{status,jdbcType=INTEGER}");
		}
		if (record.getFinanceAccountId() != null)
		{
			sql.VALUES("financeAccountId", "#{financeAccountId,jdbcType=BIGINT}");
		}
		if (record.getStartNo() != null)
		{
			sql.VALUES("startNo", "#{startNo,jdbcType=VARCHAR}");
		}
		if (record.getEndNo() != null)
		{
			sql.VALUES("endNo", "#{endNo,jdbcType=VARCHAR}");
		}
		if (record.getWinCount() != null)
		{
			sql.VALUES("winCount", "#{winCount,jdbcType=INTEGER}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String selectByExample(PApplicationDetailExample example)
	{
		SQL sql = new SQL();
		if (example != null && example.isDistinct())
		{
			sql.SELECT_DISTINCT("id");
		} else
		{
			sql.SELECT("id");
		}
		sql.SELECT("addTime");
		sql.SELECT("deleteStatus");
		sql.SELECT("commodityId");
		sql.SELECT("firmId");
		sql.SELECT("issuanceplan_id");
		sql.SELECT("count");
		sql.SELECT("totalAmount");
		sql.SELECT("brokerage");
		sql.SELECT("status");
		sql.SELECT("financeAccountId");
		sql.SELECT("startNo");
		sql.SELECT("endNo");
		sql.SELECT("winCount");
		sql.FROM("p_applicationdetail");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null)
		{
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String updateByExampleSelective(Map<String, Object> parameter)
	{
		PApplicationDetail record = (PApplicationDetail) parameter.get("record");
		PApplicationDetailExample example = (PApplicationDetailExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("p_applicationdetail");
		if (record.getId() != null)
		{
			sql.SET("id = #{record.id,jdbcType=BIGINT}");
		}
		if (record.getAddTime() != null)
		{
			sql.SET("addTime = #{record.addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.SET("deleteStatus = #{record.deleteStatus,jdbcType=BIT}");
		}
		if (record.getCommodityId() != null)
		{
			sql.SET("commodityId = #{record.commodityId,jdbcType=BIGINT}");
		}
		if (record.getFirmId() != null)
		{
			sql.SET("firmId = #{record.firmId,jdbcType=BIGINT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.SET("issuanceplan_id = #{record.issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getCount() != null)
		{
			sql.SET("count = #{record.count,jdbcType=INTEGER}");
		}
		if (record.getTotalAmount() != null)
		{
			sql.SET("totalAmount = #{record.totalAmount,jdbcType=DECIMAL}");
		}
		if (record.getBrokerage() != null)
		{
			sql.SET("brokerage = #{record.brokerage,jdbcType=DECIMAL}");
		}
		if (record.getStatus() != null)
		{
			sql.SET("status = #{record.status,jdbcType=INTEGER}");
		}
		if (record.getFinanceAccountId() != null)
		{
			sql.SET("financeAccountId = #{record.financeAccountId,jdbcType=BIGINT}");
		}
		if (record.getStartNo() != null)
		{
			sql.SET("startNo = #{record.startNo,jdbcType=VARCHAR}");
		}
		if (record.getEndNo() != null)
		{
			sql.SET("endNo = #{record.endNo,jdbcType=VARCHAR}");
		}
		if (record.getWinCount() != null)
		{
			sql.SET("winCount = #{record.winCount,jdbcType=INTEGER}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String updateByExample(Map<String, Object> parameter)
	{
		SQL sql = new SQL();
		sql.UPDATE("p_applicationdetail");
		sql.SET("id = #{record.id,jdbcType=BIGINT}");
		sql.SET("addTime = #{record.addTime,jdbcType=TIMESTAMP}");
		sql.SET("deleteStatus = #{record.deleteStatus,jdbcType=BIT}");
		sql.SET("commodityId = #{record.commodityId,jdbcType=BIGINT}");
		sql.SET("firmId = #{record.firmId,jdbcType=BIGINT}");
		sql.SET("issuanceplan_id = #{record.issuanceplan_id,jdbcType=BIGINT}");
		sql.SET("count = #{record.count,jdbcType=INTEGER}");
		sql.SET("totalAmount = #{record.totalAmount,jdbcType=DECIMAL}");
		sql.SET("brokerage = #{record.brokerage,jdbcType=DECIMAL}");
		sql.SET("status = #{record.status,jdbcType=INTEGER}");
		sql.SET("financeAccountId = #{record.financeAccountId,jdbcType=BIGINT}");
		sql.SET("startNo = #{record.startNo,jdbcType=VARCHAR}");
		sql.SET("endNo = #{record.endNo,jdbcType=VARCHAR}");
		sql.SET("winCount = #{record.winCount,jdbcType=INTEGER}");
		PApplicationDetailExample example = (PApplicationDetailExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	public String updateByPrimaryKeySelective(PApplicationDetail record)
	{
		SQL sql = new SQL();
		sql.UPDATE("p_applicationdetail");
		if (record.getAddTime() != null)
		{
			sql.SET("addTime = #{addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.SET("deleteStatus = #{deleteStatus,jdbcType=BIT}");
		}
		if (record.getCommodityId() != null)
		{
			sql.SET("commodityId = #{commodityId,jdbcType=BIGINT}");
		}
		if (record.getFirmId() != null)
		{
			sql.SET("firmId = #{firmId,jdbcType=BIGINT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.SET("issuanceplan_id = #{issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getCount() != null)
		{
			sql.SET("count = #{count,jdbcType=INTEGER}");
		}
		if (record.getTotalAmount() != null)
		{
			sql.SET("totalAmount = #{totalAmount,jdbcType=DECIMAL}");
		}
		if (record.getBrokerage() != null)
		{
			sql.SET("brokerage = #{brokerage,jdbcType=DECIMAL}");
		}
		if (record.getStatus() != null)
		{
			sql.SET("status = #{status,jdbcType=INTEGER}");
		}
		if (record.getFinanceAccountId() != null)
		{
			sql.SET("financeAccountId = #{financeAccountId,jdbcType=BIGINT}");
		}
		if (record.getStartNo() != null)
		{
			sql.SET("startNo = #{startNo,jdbcType=VARCHAR}");
		}
		if (record.getEndNo() != null)
		{
			sql.SET("endNo = #{endNo,jdbcType=VARCHAR}");
		}
		if (record.getWinCount() != null)
		{
			sql.SET("winCount = #{winCount,jdbcType=INTEGER}");
		}
		sql.WHERE("id = #{id,jdbcType=BIGINT}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_applicationdetail
	 * 
	 * @mbg.generated Wed Nov 01 18:57:40 CST 2017
	 */
	protected void applyWhere(SQL sql, PApplicationDetailExample example, boolean includeExamplePhrase)
	{
		if (example == null)
		{
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase)
		{
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else
		{
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++)
		{
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid())
			{
				if (firstCriteria)
				{
					firstCriteria = false;
				} else
				{
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++)
				{
					Criterion criterion = criterions.get(j);
					if (firstCriterion)
					{
						firstCriterion = false;
					} else
					{
						sb.append(" and ");
					}
					if (criterion.isNoValue())
					{
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue())
					{
						if (criterion.getTypeHandler() == null)
						{
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else
						{
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue())
					{
						if (criterion.getTypeHandler() == null)
						{
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else
						{
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue())
					{
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++)
						{
							if (comma)
							{
								sb.append(", ");
							} else
							{
								comma = true;
							}
							if (criterion.getTypeHandler() == null)
							{
								sb.append(String.format(parmPhrase3, i, j, k));
							} else
							{
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0)
		{
			sql.WHERE(sb.toString());
		}
	}

	public String selectVOByUseridInStatus(Long userid, String status)
	{
		StringBuffer sql = new StringBuffer();
		sql.append(" select a.* ");
		sql.append(" ,i.planStartTime as planStartTime,i.planEndTime as planEndTime,i.status as planStatus");
		sql.append(
				" ,i.totalQuantity as planTotalQuantity,i.maxSingleWinningCount as planMaxSingleWinningCount,i.unitPrice as planUnitPrice");
		sql.append(" ,i.lotteryTime as planLotteryTime ");
		sql.append(" from p_applicationdetail a,p_issuanceplan i ");
		sql.append(" where a.deleteStatus=false and a.issuanceplan_id=i.id ");
		if (CommUtil.isNotNull(userid))
		{
			sql.append(" and a.firmId="+userid);
		}
		if(CommUtil.isNotNull(status)) {
			sql.append(" and a.status in ("+status+")");
		}
		return sql.toString();
	}
}
package com.ifeng.bigtrade.purchasing.mapper;

import com.ifeng.bigtrade.purchasing.entites.PIssuancePlan;
import com.ifeng.bigtrade.purchasing.entites.PIssuancePlanExample;

import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface PIssuancePlanMapper
{

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@SelectProvider(type = PIssuancePlanSqlProvider.class, method = "countByExample")
	long countByExample(PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@DeleteProvider(type = PIssuancePlanSqlProvider.class, method = "deleteByExample")
	int deleteByExample(PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Delete(
	{ "delete from p_issuanceplan", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Options(keyProperty = "id", useGeneratedKeys = true)
	@Insert(
	{ "insert into p_issuanceplan (id, addTime, ", "deleteStatus, commodityId, ", "commodityName, planStartTime, ",
			"planEndTime, publicityStartTime, ", "status, totalQuantity, ", "maxSingleWinningCount, unitPrice, ",
			"publisherId, brokerageType, ", "brokerage, operatorId, ", "operatorName, operatorIp, ",
			"applicationCount, allocateUserId, ", "allocateUserName, allocateUserIp, ",
			"maxApplicationCount, auditorId, ", "auditorName, auditorIp, ", "lotteryTime, publicityEndTime, ", "notes)",
			"values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, ",
			"#{deleteStatus,jdbcType=BIT}, #{commodityId,jdbcType=BIGINT}, ",
			"#{commodityName,jdbcType=VARCHAR}, #{planStartTime,jdbcType=TIMESTAMP}, ",
			"#{planEndTime,jdbcType=TIMESTAMP}, #{publicityStartTime,jdbcType=TIMESTAMP}, ",
			"#{status,jdbcType=INTEGER}, #{totalQuantity,jdbcType=INTEGER}, ",
			"#{maxSingleWinningCount,jdbcType=INTEGER}, #{unitPrice,jdbcType=DECIMAL}, ",
			"#{publisherId,jdbcType=BIGINT}, #{brokerageType,jdbcType=INTEGER}, ",
			"#{brokerage,jdbcType=DECIMAL}, #{operatorId,jdbcType=BIGINT}, ",
			"#{operatorName,jdbcType=VARCHAR}, #{operatorIp,jdbcType=VARCHAR}, ",
			"#{applicationCount,jdbcType=INTEGER}, #{allocateUserId,jdbcType=BIGINT}, ",
			"#{allocateUserName,jdbcType=VARCHAR}, #{allocateUserIp,jdbcType=VARCHAR}, ",
			"#{maxApplicationCount,jdbcType=INTEGER}, #{auditorId,jdbcType=BIGINT}, ",
			"#{auditorName,jdbcType=VARCHAR}, #{auditorIp,jdbcType=VARCHAR}, ",
			"#{lotteryTime,jdbcType=TIMESTAMP}, #{publicityEndTime,jdbcType=TIMESTAMP}, ",
			"#{notes,jdbcType=LONGVARCHAR})" })
	int insert(PIssuancePlan record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Options(keyProperty = "id", useGeneratedKeys = true)
	@InsertProvider(type = PIssuancePlanSqlProvider.class, method = "insertSelective")
	int insertSelective(PIssuancePlan record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@SelectProvider(type = PIssuancePlanSqlProvider.class, method = "selectByExampleWithBLOBs")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "commodityId", property = "commodityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "commodityName", property = "commodityName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "planStartTime", property = "planStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "planEndTime", property = "planEndTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityStartTime", property = "publicityStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
			@Result(column = "totalQuantity", property = "totalQuantity", jdbcType = JdbcType.INTEGER),
			@Result(column = "maxSingleWinningCount", property = "maxSingleWinningCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "unitPrice", property = "unitPrice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "publisherId", property = "publisherId", jdbcType = JdbcType.BIGINT),
			@Result(column = "brokerageType", property = "brokerageType", jdbcType = JdbcType.INTEGER),
			@Result(column = "brokerage", property = "brokerage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "applicationCount", property = "applicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "allocateUserId", property = "allocateUserId", jdbcType = JdbcType.BIGINT),
			@Result(column = "allocateUserName", property = "allocateUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "allocateUserIp", property = "allocateUserIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "maxApplicationCount", property = "maxApplicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "auditorId", property = "auditorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "auditorName", property = "auditorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditorIp", property = "auditorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "lotteryTime", property = "lotteryTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityEndTime", property = "publicityEndTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "notes", property = "notes", jdbcType = JdbcType.LONGVARCHAR) })
	List<PIssuancePlan> selectByExampleWithBLOBs(PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@SelectProvider(type = PIssuancePlanSqlProvider.class, method = "selectByExample")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "commodityId", property = "commodityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "commodityName", property = "commodityName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "planStartTime", property = "planStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "planEndTime", property = "planEndTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityStartTime", property = "publicityStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
			@Result(column = "totalQuantity", property = "totalQuantity", jdbcType = JdbcType.INTEGER),
			@Result(column = "maxSingleWinningCount", property = "maxSingleWinningCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "unitPrice", property = "unitPrice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "publisherId", property = "publisherId", jdbcType = JdbcType.BIGINT),
			@Result(column = "brokerageType", property = "brokerageType", jdbcType = JdbcType.INTEGER),
			@Result(column = "brokerage", property = "brokerage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "applicationCount", property = "applicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "allocateUserId", property = "allocateUserId", jdbcType = JdbcType.BIGINT),
			@Result(column = "allocateUserName", property = "allocateUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "allocateUserIp", property = "allocateUserIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "maxApplicationCount", property = "maxApplicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "auditorId", property = "auditorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "auditorName", property = "auditorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditorIp", property = "auditorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "lotteryTime", property = "lotteryTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityEndTime", property = "publicityEndTime", jdbcType = JdbcType.TIMESTAMP) })
	List<PIssuancePlan> selectByExample(PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Select(
	{ "select", "id, addTime, deleteStatus, commodityId, commodityName, planStartTime, planEndTime, ",
			"publicityStartTime, status, totalQuantity, maxSingleWinningCount, unitPrice, ",
			"publisherId, brokerageType, brokerage, operatorId, operatorName, operatorIp, ",
			"applicationCount, allocateUserId, allocateUserName, allocateUserIp, maxApplicationCount, ",
			"auditorId, auditorName, auditorIp, lotteryTime, publicityEndTime, notes", "from p_issuanceplan",
			"where id = #{id,jdbcType=BIGINT}" })
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "commodityId", property = "commodityId", jdbcType = JdbcType.BIGINT),
			@Result(column = "commodityName", property = "commodityName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "planStartTime", property = "planStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "planEndTime", property = "planEndTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityStartTime", property = "publicityStartTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "status", property = "status", jdbcType = JdbcType.INTEGER),
			@Result(column = "totalQuantity", property = "totalQuantity", jdbcType = JdbcType.INTEGER),
			@Result(column = "maxSingleWinningCount", property = "maxSingleWinningCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "unitPrice", property = "unitPrice", jdbcType = JdbcType.DECIMAL),
			@Result(column = "publisherId", property = "publisherId", jdbcType = JdbcType.BIGINT),
			@Result(column = "brokerageType", property = "brokerageType", jdbcType = JdbcType.INTEGER),
			@Result(column = "brokerage", property = "brokerage", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "applicationCount", property = "applicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "allocateUserId", property = "allocateUserId", jdbcType = JdbcType.BIGINT),
			@Result(column = "allocateUserName", property = "allocateUserName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "allocateUserIp", property = "allocateUserIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "maxApplicationCount", property = "maxApplicationCount", jdbcType = JdbcType.INTEGER),
			@Result(column = "auditorId", property = "auditorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "auditorName", property = "auditorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditorIp", property = "auditorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "lotteryTime", property = "lotteryTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "publicityEndTime", property = "publicityEndTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "notes", property = "notes", jdbcType = JdbcType.LONGVARCHAR) })
	PIssuancePlan selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@UpdateProvider(type = PIssuancePlanSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") PIssuancePlan record, @Param("example") PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@UpdateProvider(type = PIssuancePlanSqlProvider.class, method = "updateByExampleWithBLOBs")
	int updateByExampleWithBLOBs(@Param("record") PIssuancePlan record, @Param("example") PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@UpdateProvider(type = PIssuancePlanSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") PIssuancePlan record, @Param("example") PIssuancePlanExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@UpdateProvider(type = PIssuancePlanSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(PIssuancePlan record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Update(
	{ "update p_issuanceplan", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "commodityId = #{commodityId,jdbcType=BIGINT},",
			"commodityName = #{commodityName,jdbcType=VARCHAR},",
			"planStartTime = #{planStartTime,jdbcType=TIMESTAMP},", "planEndTime = #{planEndTime,jdbcType=TIMESTAMP},",
			"publicityStartTime = #{publicityStartTime,jdbcType=TIMESTAMP},", "status = #{status,jdbcType=INTEGER},",
			"totalQuantity = #{totalQuantity,jdbcType=INTEGER},",
			"maxSingleWinningCount = #{maxSingleWinningCount,jdbcType=INTEGER},",
			"unitPrice = #{unitPrice,jdbcType=DECIMAL},", "publisherId = #{publisherId,jdbcType=BIGINT},",
			"brokerageType = #{brokerageType,jdbcType=INTEGER},", "brokerage = #{brokerage,jdbcType=DECIMAL},",
			"operatorId = #{operatorId,jdbcType=BIGINT},", "operatorName = #{operatorName,jdbcType=VARCHAR},",
			"operatorIp = #{operatorIp,jdbcType=VARCHAR},", "applicationCount = #{applicationCount,jdbcType=INTEGER},",
			"allocateUserId = #{allocateUserId,jdbcType=BIGINT},",
			"allocateUserName = #{allocateUserName,jdbcType=VARCHAR},",
			"allocateUserIp = #{allocateUserIp,jdbcType=VARCHAR},",
			"maxApplicationCount = #{maxApplicationCount,jdbcType=INTEGER},",
			"auditorId = #{auditorId,jdbcType=BIGINT},", "auditorName = #{auditorName,jdbcType=VARCHAR},",
			"auditorIp = #{auditorIp,jdbcType=VARCHAR},", "lotteryTime = #{lotteryTime,jdbcType=TIMESTAMP},",
			"publicityEndTime = #{publicityEndTime,jdbcType=TIMESTAMP},", "notes = #{notes,jdbcType=LONGVARCHAR}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKeyWithBLOBs(PIssuancePlan record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table p_issuanceplan
	 * 
	 * @mbg.generated Fri Nov 03 10:04:46 CST 2017
	 */
	@Update(
	{ "update p_issuanceplan", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "commodityId = #{commodityId,jdbcType=BIGINT},",
			"commodityName = #{commodityName,jdbcType=VARCHAR},",
			"planStartTime = #{planStartTime,jdbcType=TIMESTAMP},", "planEndTime = #{planEndTime,jdbcType=TIMESTAMP},",
			"publicityStartTime = #{publicityStartTime,jdbcType=TIMESTAMP},", "status = #{status,jdbcType=INTEGER},",
			"totalQuantity = #{totalQuantity,jdbcType=INTEGER},",
			"maxSingleWinningCount = #{maxSingleWinningCount,jdbcType=INTEGER},",
			"unitPrice = #{unitPrice,jdbcType=DECIMAL},", "publisherId = #{publisherId,jdbcType=BIGINT},",
			"brokerageType = #{brokerageType,jdbcType=INTEGER},", "brokerage = #{brokerage,jdbcType=DECIMAL},",
			"operatorId = #{operatorId,jdbcType=BIGINT},", "operatorName = #{operatorName,jdbcType=VARCHAR},",
			"operatorIp = #{operatorIp,jdbcType=VARCHAR},", "applicationCount = #{applicationCount,jdbcType=INTEGER},",
			"allocateUserId = #{allocateUserId,jdbcType=BIGINT},",
			"allocateUserName = #{allocateUserName,jdbcType=VARCHAR},",
			"allocateUserIp = #{allocateUserIp,jdbcType=VARCHAR},",
			"maxApplicationCount = #{maxApplicationCount,jdbcType=INTEGER},",
			"auditorId = #{auditorId,jdbcType=BIGINT},", "auditorName = #{auditorName,jdbcType=VARCHAR},",
			"auditorIp = #{auditorIp,jdbcType=VARCHAR},", "lotteryTime = #{lotteryTime,jdbcType=TIMESTAMP},",
			"publicityEndTime = #{publicityEndTime,jdbcType=TIMESTAMP}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(PIssuancePlan record);

	/*************** next new add *************************/
	@SelectProvider(type = PIssuancePlanSqlProvider.class, method = "selectIssuance")
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectIssuance(Long commodityId, String startTime, String status,String commodityName);

	@Update(
	{ "update p_issuanceplan", "set applicationCount = applicationCount + #{count}", "where id = #{id}" })
	int updateApplicationByPrimaryKey(@Param("id") Long id, @Param("count") Integer count);
	
	@SelectProvider(type = PIssuancePlanSqlProvider.class, method = "selectIssuanceForUserShow")
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectIssuanceForUserShow(Long commodityId, String status);
}
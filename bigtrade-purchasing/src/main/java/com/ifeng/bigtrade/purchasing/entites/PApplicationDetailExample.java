package com.ifeng.bigtrade.purchasing.entites;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

public class PApplicationDetailExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public PApplicationDetailExample()
	{
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public void setOrderByClause(String orderByClause)
	{
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public String getOrderByClause()
	{
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public void setDistinct(boolean distinct)
	{
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public boolean isDistinct()
	{
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public List<Criteria> getOredCriteria()
	{
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public void or(Criteria criteria)
	{
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public Criteria or()
	{
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public Criteria createCriteria()
	{
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0)
		{
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	protected Criteria createCriteriaInternal()
	{
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public void clear()
	{
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	protected abstract static class GeneratedCriteria
	{
		protected List<Criterion> criteria;

		protected GeneratedCriteria()
		{
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid()
		{
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria()
		{
			return criteria;
		}

		public List<Criterion> getCriteria()
		{
			return criteria;
		}

		protected void addCriterion(String condition)
		{
			if (condition == null)
			{
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property)
		{
			if (value == null)
			{
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property)
		{
			if (value1 == null || value2 == null)
			{
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andIdIsNull()
		{
			addCriterion("id is null");
			return (Criteria) this;
		}

		public Criteria andIdIsNotNull()
		{
			addCriterion("id is not null");
			return (Criteria) this;
		}

		public Criteria andIdEqualTo(Long value)
		{
			addCriterion("id =", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotEqualTo(Long value)
		{
			addCriterion("id <>", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThan(Long value)
		{
			addCriterion("id >", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdGreaterThanOrEqualTo(Long value)
		{
			addCriterion("id >=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThan(Long value)
		{
			addCriterion("id <", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdLessThanOrEqualTo(Long value)
		{
			addCriterion("id <=", value, "id");
			return (Criteria) this;
		}

		public Criteria andIdIn(List<Long> values)
		{
			addCriterion("id in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotIn(List<Long> values)
		{
			addCriterion("id not in", values, "id");
			return (Criteria) this;
		}

		public Criteria andIdBetween(Long value1, Long value2)
		{
			addCriterion("id between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andIdNotBetween(Long value1, Long value2)
		{
			addCriterion("id not between", value1, value2, "id");
			return (Criteria) this;
		}

		public Criteria andAddTimeIsNull()
		{
			addCriterion("addTime is null");
			return (Criteria) this;
		}

		public Criteria andAddTimeIsNotNull()
		{
			addCriterion("addTime is not null");
			return (Criteria) this;
		}

		public Criteria andAddTimeEqualTo(Date value)
		{
			addCriterion("addTime =", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotEqualTo(Date value)
		{
			addCriterion("addTime <>", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeGreaterThan(Date value)
		{
			addCriterion("addTime >", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeGreaterThanOrEqualTo(Date value)
		{
			addCriterion("addTime >=", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeLessThan(Date value)
		{
			addCriterion("addTime <", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeLessThanOrEqualTo(Date value)
		{
			addCriterion("addTime <=", value, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeIn(List<Date> values)
		{
			addCriterion("addTime in", values, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotIn(List<Date> values)
		{
			addCriterion("addTime not in", values, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeBetween(Date value1, Date value2)
		{
			addCriterion("addTime between", value1, value2, "addTime");
			return (Criteria) this;
		}

		public Criteria andAddTimeNotBetween(Date value1, Date value2)
		{
			addCriterion("addTime not between", value1, value2, "addTime");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusIsNull()
		{
			addCriterion("deleteStatus is null");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusIsNotNull()
		{
			addCriterion("deleteStatus is not null");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusEqualTo(Boolean value)
		{
			addCriterion("deleteStatus =", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusNotEqualTo(Boolean value)
		{
			addCriterion("deleteStatus <>", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusGreaterThan(Boolean value)
		{
			addCriterion("deleteStatus >", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusGreaterThanOrEqualTo(Boolean value)
		{
			addCriterion("deleteStatus >=", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusLessThan(Boolean value)
		{
			addCriterion("deleteStatus <", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusLessThanOrEqualTo(Boolean value)
		{
			addCriterion("deleteStatus <=", value, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusIn(List<Boolean> values)
		{
			addCriterion("deleteStatus in", values, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusNotIn(List<Boolean> values)
		{
			addCriterion("deleteStatus not in", values, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusBetween(Boolean value1, Boolean value2)
		{
			addCriterion("deleteStatus between", value1, value2, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andDeleteStatusNotBetween(Boolean value1, Boolean value2)
		{
			addCriterion("deleteStatus not between", value1, value2, "deleteStatus");
			return (Criteria) this;
		}

		public Criteria andCommodityIdIsNull()
		{
			addCriterion("commodityId is null");
			return (Criteria) this;
		}

		public Criteria andCommodityIdIsNotNull()
		{
			addCriterion("commodityId is not null");
			return (Criteria) this;
		}

		public Criteria andCommodityIdEqualTo(Long value)
		{
			addCriterion("commodityId =", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdNotEqualTo(Long value)
		{
			addCriterion("commodityId <>", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdGreaterThan(Long value)
		{
			addCriterion("commodityId >", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdGreaterThanOrEqualTo(Long value)
		{
			addCriterion("commodityId >=", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdLessThan(Long value)
		{
			addCriterion("commodityId <", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdLessThanOrEqualTo(Long value)
		{
			addCriterion("commodityId <=", value, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdIn(List<Long> values)
		{
			addCriterion("commodityId in", values, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdNotIn(List<Long> values)
		{
			addCriterion("commodityId not in", values, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdBetween(Long value1, Long value2)
		{
			addCriterion("commodityId between", value1, value2, "commodityId");
			return (Criteria) this;
		}

		public Criteria andCommodityIdNotBetween(Long value1, Long value2)
		{
			addCriterion("commodityId not between", value1, value2, "commodityId");
			return (Criteria) this;
		}

		public Criteria andFirmIdIsNull()
		{
			addCriterion("firmId is null");
			return (Criteria) this;
		}

		public Criteria andFirmIdIsNotNull()
		{
			addCriterion("firmId is not null");
			return (Criteria) this;
		}

		public Criteria andFirmIdEqualTo(Long value)
		{
			addCriterion("firmId =", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdNotEqualTo(Long value)
		{
			addCriterion("firmId <>", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdGreaterThan(Long value)
		{
			addCriterion("firmId >", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdGreaterThanOrEqualTo(Long value)
		{
			addCriterion("firmId >=", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdLessThan(Long value)
		{
			addCriterion("firmId <", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdLessThanOrEqualTo(Long value)
		{
			addCriterion("firmId <=", value, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdIn(List<Long> values)
		{
			addCriterion("firmId in", values, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdNotIn(List<Long> values)
		{
			addCriterion("firmId not in", values, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdBetween(Long value1, Long value2)
		{
			addCriterion("firmId between", value1, value2, "firmId");
			return (Criteria) this;
		}

		public Criteria andFirmIdNotBetween(Long value1, Long value2)
		{
			addCriterion("firmId not between", value1, value2, "firmId");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idIsNull()
		{
			addCriterion("issuanceplan_id is null");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idIsNotNull()
		{
			addCriterion("issuanceplan_id is not null");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idEqualTo(Long value)
		{
			addCriterion("issuanceplan_id =", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idNotEqualTo(Long value)
		{
			addCriterion("issuanceplan_id <>", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idGreaterThan(Long value)
		{
			addCriterion("issuanceplan_id >", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idGreaterThanOrEqualTo(Long value)
		{
			addCriterion("issuanceplan_id >=", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idLessThan(Long value)
		{
			addCriterion("issuanceplan_id <", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idLessThanOrEqualTo(Long value)
		{
			addCriterion("issuanceplan_id <=", value, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idIn(List<Long> values)
		{
			addCriterion("issuanceplan_id in", values, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idNotIn(List<Long> values)
		{
			addCriterion("issuanceplan_id not in", values, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idBetween(Long value1, Long value2)
		{
			addCriterion("issuanceplan_id between", value1, value2, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andIssuanceplan_idNotBetween(Long value1, Long value2)
		{
			addCriterion("issuanceplan_id not between", value1, value2, "issuanceplan_id");
			return (Criteria) this;
		}

		public Criteria andCountIsNull()
		{
			addCriterion("count is null");
			return (Criteria) this;
		}

		public Criteria andCountIsNotNull()
		{
			addCriterion("count is not null");
			return (Criteria) this;
		}

		public Criteria andCountEqualTo(Integer value)
		{
			addCriterion("count =", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotEqualTo(Integer value)
		{
			addCriterion("count <>", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountGreaterThan(Integer value)
		{
			addCriterion("count >", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountGreaterThanOrEqualTo(Integer value)
		{
			addCriterion("count >=", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountLessThan(Integer value)
		{
			addCriterion("count <", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountLessThanOrEqualTo(Integer value)
		{
			addCriterion("count <=", value, "count");
			return (Criteria) this;
		}

		public Criteria andCountIn(List<Integer> values)
		{
			addCriterion("count in", values, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotIn(List<Integer> values)
		{
			addCriterion("count not in", values, "count");
			return (Criteria) this;
		}

		public Criteria andCountBetween(Integer value1, Integer value2)
		{
			addCriterion("count between", value1, value2, "count");
			return (Criteria) this;
		}

		public Criteria andCountNotBetween(Integer value1, Integer value2)
		{
			addCriterion("count not between", value1, value2, "count");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIsNull()
		{
			addCriterion("totalAmount is null");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIsNotNull()
		{
			addCriterion("totalAmount is not null");
			return (Criteria) this;
		}

		public Criteria andTotalAmountEqualTo(BigDecimal value)
		{
			addCriterion("totalAmount =", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotEqualTo(BigDecimal value)
		{
			addCriterion("totalAmount <>", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountGreaterThan(BigDecimal value)
		{
			addCriterion("totalAmount >", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountGreaterThanOrEqualTo(BigDecimal value)
		{
			addCriterion("totalAmount >=", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountLessThan(BigDecimal value)
		{
			addCriterion("totalAmount <", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountLessThanOrEqualTo(BigDecimal value)
		{
			addCriterion("totalAmount <=", value, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountIn(List<BigDecimal> values)
		{
			addCriterion("totalAmount in", values, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotIn(List<BigDecimal> values)
		{
			addCriterion("totalAmount not in", values, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountBetween(BigDecimal value1, BigDecimal value2)
		{
			addCriterion("totalAmount between", value1, value2, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andTotalAmountNotBetween(BigDecimal value1, BigDecimal value2)
		{
			addCriterion("totalAmount not between", value1, value2, "totalAmount");
			return (Criteria) this;
		}

		public Criteria andBrokerageIsNull()
		{
			addCriterion("brokerage is null");
			return (Criteria) this;
		}

		public Criteria andBrokerageIsNotNull()
		{
			addCriterion("brokerage is not null");
			return (Criteria) this;
		}

		public Criteria andBrokerageEqualTo(BigDecimal value)
		{
			addCriterion("brokerage =", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageNotEqualTo(BigDecimal value)
		{
			addCriterion("brokerage <>", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageGreaterThan(BigDecimal value)
		{
			addCriterion("brokerage >", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageGreaterThanOrEqualTo(BigDecimal value)
		{
			addCriterion("brokerage >=", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageLessThan(BigDecimal value)
		{
			addCriterion("brokerage <", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageLessThanOrEqualTo(BigDecimal value)
		{
			addCriterion("brokerage <=", value, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageIn(List<BigDecimal> values)
		{
			addCriterion("brokerage in", values, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageNotIn(List<BigDecimal> values)
		{
			addCriterion("brokerage not in", values, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageBetween(BigDecimal value1, BigDecimal value2)
		{
			addCriterion("brokerage between", value1, value2, "brokerage");
			return (Criteria) this;
		}

		public Criteria andBrokerageNotBetween(BigDecimal value1, BigDecimal value2)
		{
			addCriterion("brokerage not between", value1, value2, "brokerage");
			return (Criteria) this;
		}

		public Criteria andStatusIsNull()
		{
			addCriterion("status is null");
			return (Criteria) this;
		}

		public Criteria andStatusIsNotNull()
		{
			addCriterion("status is not null");
			return (Criteria) this;
		}

		public Criteria andStatusEqualTo(Integer value)
		{
			addCriterion("status =", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotEqualTo(Integer value)
		{
			addCriterion("status <>", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThan(Integer value)
		{
			addCriterion("status >", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusGreaterThanOrEqualTo(Integer value)
		{
			addCriterion("status >=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThan(Integer value)
		{
			addCriterion("status <", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusLessThanOrEqualTo(Integer value)
		{
			addCriterion("status <=", value, "status");
			return (Criteria) this;
		}

		public Criteria andStatusIn(List<Integer> values)
		{
			addCriterion("status in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotIn(List<Integer> values)
		{
			addCriterion("status not in", values, "status");
			return (Criteria) this;
		}

		public Criteria andStatusBetween(Integer value1, Integer value2)
		{
			addCriterion("status between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andStatusNotBetween(Integer value1, Integer value2)
		{
			addCriterion("status not between", value1, value2, "status");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdIsNull()
		{
			addCriterion("financeAccountId is null");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdIsNotNull()
		{
			addCriterion("financeAccountId is not null");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdEqualTo(Long value)
		{
			addCriterion("financeAccountId =", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdNotEqualTo(Long value)
		{
			addCriterion("financeAccountId <>", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdGreaterThan(Long value)
		{
			addCriterion("financeAccountId >", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdGreaterThanOrEqualTo(Long value)
		{
			addCriterion("financeAccountId >=", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdLessThan(Long value)
		{
			addCriterion("financeAccountId <", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdLessThanOrEqualTo(Long value)
		{
			addCriterion("financeAccountId <=", value, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdIn(List<Long> values)
		{
			addCriterion("financeAccountId in", values, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdNotIn(List<Long> values)
		{
			addCriterion("financeAccountId not in", values, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdBetween(Long value1, Long value2)
		{
			addCriterion("financeAccountId between", value1, value2, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andFinanceAccountIdNotBetween(Long value1, Long value2)
		{
			addCriterion("financeAccountId not between", value1, value2, "financeAccountId");
			return (Criteria) this;
		}

		public Criteria andStartNoIsNull()
		{
			addCriterion("startNo is null");
			return (Criteria) this;
		}

		public Criteria andStartNoIsNotNull()
		{
			addCriterion("startNo is not null");
			return (Criteria) this;
		}

		public Criteria andStartNoEqualTo(String value)
		{
			addCriterion("startNo =", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoNotEqualTo(String value)
		{
			addCriterion("startNo <>", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoGreaterThan(String value)
		{
			addCriterion("startNo >", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoGreaterThanOrEqualTo(String value)
		{
			addCriterion("startNo >=", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoLessThan(String value)
		{
			addCriterion("startNo <", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoLessThanOrEqualTo(String value)
		{
			addCriterion("startNo <=", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoLike(String value)
		{
			addCriterion("startNo like", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoNotLike(String value)
		{
			addCriterion("startNo not like", value, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoIn(List<String> values)
		{
			addCriterion("startNo in", values, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoNotIn(List<String> values)
		{
			addCriterion("startNo not in", values, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoBetween(String value1, String value2)
		{
			addCriterion("startNo between", value1, value2, "startNo");
			return (Criteria) this;
		}

		public Criteria andStartNoNotBetween(String value1, String value2)
		{
			addCriterion("startNo not between", value1, value2, "startNo");
			return (Criteria) this;
		}

		public Criteria andEndNoIsNull()
		{
			addCriterion("endNo is null");
			return (Criteria) this;
		}

		public Criteria andEndNoIsNotNull()
		{
			addCriterion("endNo is not null");
			return (Criteria) this;
		}

		public Criteria andEndNoEqualTo(String value)
		{
			addCriterion("endNo =", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoNotEqualTo(String value)
		{
			addCriterion("endNo <>", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoGreaterThan(String value)
		{
			addCriterion("endNo >", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoGreaterThanOrEqualTo(String value)
		{
			addCriterion("endNo >=", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoLessThan(String value)
		{
			addCriterion("endNo <", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoLessThanOrEqualTo(String value)
		{
			addCriterion("endNo <=", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoLike(String value)
		{
			addCriterion("endNo like", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoNotLike(String value)
		{
			addCriterion("endNo not like", value, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoIn(List<String> values)
		{
			addCriterion("endNo in", values, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoNotIn(List<String> values)
		{
			addCriterion("endNo not in", values, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoBetween(String value1, String value2)
		{
			addCriterion("endNo between", value1, value2, "endNo");
			return (Criteria) this;
		}

		public Criteria andEndNoNotBetween(String value1, String value2)
		{
			addCriterion("endNo not between", value1, value2, "endNo");
			return (Criteria) this;
		}

		public Criteria andWinCountIsNull()
		{
			addCriterion("winCount is null");
			return (Criteria) this;
		}

		public Criteria andWinCountIsNotNull()
		{
			addCriterion("winCount is not null");
			return (Criteria) this;
		}

		public Criteria andWinCountEqualTo(Integer value)
		{
			addCriterion("winCount =", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountNotEqualTo(Integer value)
		{
			addCriterion("winCount <>", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountGreaterThan(Integer value)
		{
			addCriterion("winCount >", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountGreaterThanOrEqualTo(Integer value)
		{
			addCriterion("winCount >=", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountLessThan(Integer value)
		{
			addCriterion("winCount <", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountLessThanOrEqualTo(Integer value)
		{
			addCriterion("winCount <=", value, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountIn(List<Integer> values)
		{
			addCriterion("winCount in", values, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountNotIn(List<Integer> values)
		{
			addCriterion("winCount not in", values, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountBetween(Integer value1, Integer value2)
		{
			addCriterion("winCount between", value1, value2, "winCount");
			return (Criteria) this;
		}

		public Criteria andWinCountNotBetween(Integer value1, Integer value2)
		{
			addCriterion("winCount not between", value1, value2, "winCount");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table p_applicationdetail
	 * @mbg.generated  Wed Nov 01 18:57:40 CST 2017
	 */
	public static class Criterion
	{
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition()
		{
			return condition;
		}

		public Object getValue()
		{
			return value;
		}

		public Object getSecondValue()
		{
			return secondValue;
		}

		public boolean isNoValue()
		{
			return noValue;
		}

		public boolean isSingleValue()
		{
			return singleValue;
		}

		public boolean isBetweenValue()
		{
			return betweenValue;
		}

		public boolean isListValue()
		{
			return listValue;
		}

		public String getTypeHandler()
		{
			return typeHandler;
		}

		protected Criterion(String condition)
		{
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler)
		{
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>)
			{
				this.listValue = true;
			} else
			{
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value)
		{
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler)
		{
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue)
		{
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table p_applicationdetail
     *
     * @mbg.generated do_not_delete_during_merge Fri Sep 08 15:50:03 CST 2017
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}
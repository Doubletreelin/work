package com.ifeng.bigtrade.purchasing.mapper;

import com.ifeng.bigtrade.purchasing.entites.PLotteryResult;
import com.ifeng.bigtrade.purchasing.entites.PLotteryResultExample;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;
import com.ifeng.bigtrade.purchasing.entites.PLotteryResultWithBLOBs;

public interface PLotteryResultMapper {
    /**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@SelectProvider(type = PLotteryResultSqlProvider.class, method = "countByExample")
	long countByExample(PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@DeleteProvider(type = PLotteryResultSqlProvider.class, method = "deleteByExample")
	int deleteByExample(PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@Delete(
	{ "delete from p_lotteryresult", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@Insert(
	{ "insert into p_lotteryresult (id, addTime, ", "deleteStatus, issuanceplan_id, ", "winningRate, operatorId, ",
			"operatorName, operatorIp, ", "lotteryResult, lotteryResultShow)",
			"values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, ",
			"#{deleteStatus,jdbcType=BIT}, #{issuanceplan_id,jdbcType=BIGINT}, ",
			"#{winningRate,jdbcType=DECIMAL}, #{operatorId,jdbcType=BIGINT}, ",
			"#{operatorName,jdbcType=VARCHAR}, #{operatorIp,jdbcType=VARCHAR}, ",
			"#{lotteryResult,jdbcType=LONGVARCHAR}, #{lotteryResultShow,jdbcType=LONGVARCHAR})" })
	int insert(PLotteryResultWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@InsertProvider(type = PLotteryResultSqlProvider.class, method = "insertSelective")
	int insertSelective(PLotteryResultWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@SelectProvider(type = PLotteryResultSqlProvider.class, method = "selectByExampleWithBLOBs")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "issuanceplan_id", property = "issuanceplan_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "winningRate", property = "winningRate", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "lotteryResult", property = "lotteryResult", jdbcType = JdbcType.LONGVARCHAR),
			@Result(column = "lotteryResultShow", property = "lotteryResultShow", jdbcType = JdbcType.LONGVARCHAR) })
	List<PLotteryResultWithBLOBs> selectByExampleWithBLOBs(PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@SelectProvider(type = PLotteryResultSqlProvider.class, method = "selectByExample")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "issuanceplan_id", property = "issuanceplan_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "winningRate", property = "winningRate", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR) })
	List<PLotteryResult> selectByExample(PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@Select(
	{ "select", "id, addTime, deleteStatus, issuanceplan_id, winningRate, operatorId, operatorName, ",
			"operatorIp, lotteryResult, lotteryResultShow", "from p_lotteryresult",
			"where id = #{id,jdbcType=BIGINT}" })
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "issuanceplan_id", property = "issuanceplan_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "winningRate", property = "winningRate", jdbcType = JdbcType.DECIMAL),
			@Result(column = "operatorId", property = "operatorId", jdbcType = JdbcType.BIGINT),
			@Result(column = "operatorName", property = "operatorName", jdbcType = JdbcType.VARCHAR),
			@Result(column = "operatorIp", property = "operatorIp", jdbcType = JdbcType.VARCHAR),
			@Result(column = "lotteryResult", property = "lotteryResult", jdbcType = JdbcType.LONGVARCHAR),
			@Result(column = "lotteryResultShow", property = "lotteryResultShow", jdbcType = JdbcType.LONGVARCHAR) })
	PLotteryResultWithBLOBs selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@UpdateProvider(type = PLotteryResultSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") PLotteryResultWithBLOBs record,
			@Param("example") PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@UpdateProvider(type = PLotteryResultSqlProvider.class, method = "updateByExampleWithBLOBs")
	int updateByExampleWithBLOBs(@Param("record") PLotteryResultWithBLOBs record,
			@Param("example") PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@UpdateProvider(type = PLotteryResultSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") PLotteryResult record, @Param("example") PLotteryResultExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@UpdateProvider(type = PLotteryResultSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(PLotteryResultWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@Update(
	{ "update p_lotteryresult", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "issuanceplan_id = #{issuanceplan_id,jdbcType=BIGINT},",
			"winningRate = #{winningRate,jdbcType=DECIMAL},", "operatorId = #{operatorId,jdbcType=BIGINT},",
			"operatorName = #{operatorName,jdbcType=VARCHAR},", "operatorIp = #{operatorIp,jdbcType=VARCHAR},",
			"lotteryResult = #{lotteryResult,jdbcType=LONGVARCHAR},",
			"lotteryResultShow = #{lotteryResultShow,jdbcType=LONGVARCHAR}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKeyWithBLOBs(PLotteryResultWithBLOBs record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	@Update(
	{ "update p_lotteryresult", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "issuanceplan_id = #{issuanceplan_id,jdbcType=BIGINT},",
			"winningRate = #{winningRate,jdbcType=DECIMAL},", "operatorId = #{operatorId,jdbcType=BIGINT},",
			"operatorName = #{operatorName,jdbcType=VARCHAR},", "operatorIp = #{operatorIp,jdbcType=VARCHAR}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(PLotteryResult record);

	/******************next new add*********************/
    @Select({
        "select",
        "id, addTime, deleteStatus, issuanceplan_id, winningRate, operatorId, operatorName, ",
        "operatorIp, lotteryResult",
        "from p_lotteryresult",
        "where issuanceplan_id = #{planid,jdbcType=BIGINT}"
    })
    @ResultType(PLotteryResult.class)
    PLotteryResult selectByIssuanceplanId(@Param("planid")Long planid);
}
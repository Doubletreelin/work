package com.ifeng.bigtrade.purchasing.mapper;

import com.ifeng.bigtrade.purchasing.entites.PLotteryResultExample.Criteria;
import com.ifeng.bigtrade.purchasing.entites.PLotteryResultExample.Criterion;
import com.ifeng.bigtrade.purchasing.entites.PLotteryResultExample;
import java.util.List;
import java.util.Map;
import org.apache.ibatis.jdbc.SQL;
import com.ifeng.bigtrade.purchasing.entites.PLotteryResultWithBLOBs;

public class PLotteryResultSqlProvider {

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String countByExample(PLotteryResultExample example)
	{
		SQL sql = new SQL();
		sql.SELECT("count(*)").FROM("p_lotteryresult");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String deleteByExample(PLotteryResultExample example)
	{
		SQL sql = new SQL();
		sql.DELETE_FROM("p_lotteryresult");
		applyWhere(sql, example, false);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String insertSelective(PLotteryResultWithBLOBs record)
	{
		SQL sql = new SQL();
		sql.INSERT_INTO("p_lotteryresult");
		if (record.getId() != null)
		{
			sql.VALUES("id", "#{id,jdbcType=BIGINT}");
		}
		if (record.getAddTime() != null)
		{
			sql.VALUES("addTime", "#{addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.VALUES("deleteStatus", "#{deleteStatus,jdbcType=BIT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.VALUES("issuanceplan_id", "#{issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getWinningRate() != null)
		{
			sql.VALUES("winningRate", "#{winningRate,jdbcType=DECIMAL}");
		}
		if (record.getOperatorId() != null)
		{
			sql.VALUES("operatorId", "#{operatorId,jdbcType=BIGINT}");
		}
		if (record.getOperatorName() != null)
		{
			sql.VALUES("operatorName", "#{operatorName,jdbcType=VARCHAR}");
		}
		if (record.getOperatorIp() != null)
		{
			sql.VALUES("operatorIp", "#{operatorIp,jdbcType=VARCHAR}");
		}
		if (record.getLotteryResult() != null)
		{
			sql.VALUES("lotteryResult", "#{lotteryResult,jdbcType=LONGVARCHAR}");
		}
		if (record.getLotteryResultShow() != null)
		{
			sql.VALUES("lotteryResultShow", "#{lotteryResultShow,jdbcType=LONGVARCHAR}");
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String selectByExampleWithBLOBs(PLotteryResultExample example)
	{
		SQL sql = new SQL();
		if (example != null && example.isDistinct())
		{
			sql.SELECT_DISTINCT("id");
		} else
		{
			sql.SELECT("id");
		}
		sql.SELECT("addTime");
		sql.SELECT("deleteStatus");
		sql.SELECT("issuanceplan_id");
		sql.SELECT("winningRate");
		sql.SELECT("operatorId");
		sql.SELECT("operatorName");
		sql.SELECT("operatorIp");
		sql.SELECT("lotteryResult");
		sql.SELECT("lotteryResultShow");
		sql.FROM("p_lotteryresult");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null)
		{
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String selectByExample(PLotteryResultExample example)
	{
		SQL sql = new SQL();
		if (example != null && example.isDistinct())
		{
			sql.SELECT_DISTINCT("id");
		} else
		{
			sql.SELECT("id");
		}
		sql.SELECT("addTime");
		sql.SELECT("deleteStatus");
		sql.SELECT("issuanceplan_id");
		sql.SELECT("winningRate");
		sql.SELECT("operatorId");
		sql.SELECT("operatorName");
		sql.SELECT("operatorIp");
		sql.FROM("p_lotteryresult");
		applyWhere(sql, example, false);
		if (example != null && example.getOrderByClause() != null)
		{
			sql.ORDER_BY(example.getOrderByClause());
		}
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String updateByExampleSelective(Map<String, Object> parameter)
	{
		PLotteryResultWithBLOBs record = (PLotteryResultWithBLOBs) parameter.get("record");
		PLotteryResultExample example = (PLotteryResultExample) parameter.get("example");
		SQL sql = new SQL();
		sql.UPDATE("p_lotteryresult");
		if (record.getId() != null)
		{
			sql.SET("id = #{record.id,jdbcType=BIGINT}");
		}
		if (record.getAddTime() != null)
		{
			sql.SET("addTime = #{record.addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.SET("deleteStatus = #{record.deleteStatus,jdbcType=BIT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.SET("issuanceplan_id = #{record.issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getWinningRate() != null)
		{
			sql.SET("winningRate = #{record.winningRate,jdbcType=DECIMAL}");
		}
		if (record.getOperatorId() != null)
		{
			sql.SET("operatorId = #{record.operatorId,jdbcType=BIGINT}");
		}
		if (record.getOperatorName() != null)
		{
			sql.SET("operatorName = #{record.operatorName,jdbcType=VARCHAR}");
		}
		if (record.getOperatorIp() != null)
		{
			sql.SET("operatorIp = #{record.operatorIp,jdbcType=VARCHAR}");
		}
		if (record.getLotteryResult() != null)
		{
			sql.SET("lotteryResult = #{record.lotteryResult,jdbcType=LONGVARCHAR}");
		}
		if (record.getLotteryResultShow() != null)
		{
			sql.SET("lotteryResultShow = #{record.lotteryResultShow,jdbcType=LONGVARCHAR}");
		}
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String updateByExampleWithBLOBs(Map<String, Object> parameter)
	{
		SQL sql = new SQL();
		sql.UPDATE("p_lotteryresult");
		sql.SET("id = #{record.id,jdbcType=BIGINT}");
		sql.SET("addTime = #{record.addTime,jdbcType=TIMESTAMP}");
		sql.SET("deleteStatus = #{record.deleteStatus,jdbcType=BIT}");
		sql.SET("issuanceplan_id = #{record.issuanceplan_id,jdbcType=BIGINT}");
		sql.SET("winningRate = #{record.winningRate,jdbcType=DECIMAL}");
		sql.SET("operatorId = #{record.operatorId,jdbcType=BIGINT}");
		sql.SET("operatorName = #{record.operatorName,jdbcType=VARCHAR}");
		sql.SET("operatorIp = #{record.operatorIp,jdbcType=VARCHAR}");
		sql.SET("lotteryResult = #{record.lotteryResult,jdbcType=LONGVARCHAR}");
		sql.SET("lotteryResultShow = #{record.lotteryResultShow,jdbcType=LONGVARCHAR}");
		PLotteryResultExample example = (PLotteryResultExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String updateByExample(Map<String, Object> parameter)
	{
		SQL sql = new SQL();
		sql.UPDATE("p_lotteryresult");
		sql.SET("id = #{record.id,jdbcType=BIGINT}");
		sql.SET("addTime = #{record.addTime,jdbcType=TIMESTAMP}");
		sql.SET("deleteStatus = #{record.deleteStatus,jdbcType=BIT}");
		sql.SET("issuanceplan_id = #{record.issuanceplan_id,jdbcType=BIGINT}");
		sql.SET("winningRate = #{record.winningRate,jdbcType=DECIMAL}");
		sql.SET("operatorId = #{record.operatorId,jdbcType=BIGINT}");
		sql.SET("operatorName = #{record.operatorName,jdbcType=VARCHAR}");
		sql.SET("operatorIp = #{record.operatorIp,jdbcType=VARCHAR}");
		PLotteryResultExample example = (PLotteryResultExample) parameter.get("example");
		applyWhere(sql, example, true);
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	public String updateByPrimaryKeySelective(PLotteryResultWithBLOBs record)
	{
		SQL sql = new SQL();
		sql.UPDATE("p_lotteryresult");
		if (record.getAddTime() != null)
		{
			sql.SET("addTime = #{addTime,jdbcType=TIMESTAMP}");
		}
		if (record.getDeleteStatus() != null)
		{
			sql.SET("deleteStatus = #{deleteStatus,jdbcType=BIT}");
		}
		if (record.getIssuanceplan_id() != null)
		{
			sql.SET("issuanceplan_id = #{issuanceplan_id,jdbcType=BIGINT}");
		}
		if (record.getWinningRate() != null)
		{
			sql.SET("winningRate = #{winningRate,jdbcType=DECIMAL}");
		}
		if (record.getOperatorId() != null)
		{
			sql.SET("operatorId = #{operatorId,jdbcType=BIGINT}");
		}
		if (record.getOperatorName() != null)
		{
			sql.SET("operatorName = #{operatorName,jdbcType=VARCHAR}");
		}
		if (record.getOperatorIp() != null)
		{
			sql.SET("operatorIp = #{operatorIp,jdbcType=VARCHAR}");
		}
		if (record.getLotteryResult() != null)
		{
			sql.SET("lotteryResult = #{lotteryResult,jdbcType=LONGVARCHAR}");
		}
		if (record.getLotteryResultShow() != null)
		{
			sql.SET("lotteryResultShow = #{lotteryResultShow,jdbcType=LONGVARCHAR}");
		}
		sql.WHERE("id = #{id,jdbcType=BIGINT}");
		return sql.toString();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table p_lotteryresult
	 * @mbg.generated  Wed Sep 20 18:03:16 CST 2017
	 */
	protected void applyWhere(SQL sql, PLotteryResultExample example, boolean includeExamplePhrase)
	{
		if (example == null)
		{
			return;
		}
		String parmPhrase1;
		String parmPhrase1_th;
		String parmPhrase2;
		String parmPhrase2_th;
		String parmPhrase3;
		String parmPhrase3_th;
		if (includeExamplePhrase)
		{
			parmPhrase1 = "%s #{example.oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{example.oredCriteria[%d].allCriteria[%d].value} and #{example.oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{example.oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{example.oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{example.oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{example.oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		} else
		{
			parmPhrase1 = "%s #{oredCriteria[%d].allCriteria[%d].value}";
			parmPhrase1_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s}";
			parmPhrase2 = "%s #{oredCriteria[%d].allCriteria[%d].value} and #{oredCriteria[%d].criteria[%d].secondValue}";
			parmPhrase2_th = "%s #{oredCriteria[%d].allCriteria[%d].value,typeHandler=%s} and #{oredCriteria[%d].criteria[%d].secondValue,typeHandler=%s}";
			parmPhrase3 = "#{oredCriteria[%d].allCriteria[%d].value[%d]}";
			parmPhrase3_th = "#{oredCriteria[%d].allCriteria[%d].value[%d],typeHandler=%s}";
		}
		StringBuilder sb = new StringBuilder();
		List<Criteria> oredCriteria = example.getOredCriteria();
		boolean firstCriteria = true;
		for (int i = 0; i < oredCriteria.size(); i++)
		{
			Criteria criteria = oredCriteria.get(i);
			if (criteria.isValid())
			{
				if (firstCriteria)
				{
					firstCriteria = false;
				} else
				{
					sb.append(" or ");
				}
				sb.append('(');
				List<Criterion> criterions = criteria.getAllCriteria();
				boolean firstCriterion = true;
				for (int j = 0; j < criterions.size(); j++)
				{
					Criterion criterion = criterions.get(j);
					if (firstCriterion)
					{
						firstCriterion = false;
					} else
					{
						sb.append(" and ");
					}
					if (criterion.isNoValue())
					{
						sb.append(criterion.getCondition());
					} else if (criterion.isSingleValue())
					{
						if (criterion.getTypeHandler() == null)
						{
							sb.append(String.format(parmPhrase1, criterion.getCondition(), i, j));
						} else
						{
							sb.append(String.format(parmPhrase1_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler()));
						}
					} else if (criterion.isBetweenValue())
					{
						if (criterion.getTypeHandler() == null)
						{
							sb.append(String.format(parmPhrase2, criterion.getCondition(), i, j, i, j));
						} else
						{
							sb.append(String.format(parmPhrase2_th, criterion.getCondition(), i, j,
									criterion.getTypeHandler(), i, j, criterion.getTypeHandler()));
						}
					} else if (criterion.isListValue())
					{
						sb.append(criterion.getCondition());
						sb.append(" (");
						List<?> listItems = (List<?>) criterion.getValue();
						boolean comma = false;
						for (int k = 0; k < listItems.size(); k++)
						{
							if (comma)
							{
								sb.append(", ");
							} else
							{
								comma = true;
							}
							if (criterion.getTypeHandler() == null)
							{
								sb.append(String.format(parmPhrase3, i, j, k));
							} else
							{
								sb.append(String.format(parmPhrase3_th, i, j, k, criterion.getTypeHandler()));
							}
						}
						sb.append(')');
					}
				}
				sb.append(')');
			}
		}
		if (sb.length() > 0)
		{
			sql.WHERE(sb.toString());
		}
	}
}
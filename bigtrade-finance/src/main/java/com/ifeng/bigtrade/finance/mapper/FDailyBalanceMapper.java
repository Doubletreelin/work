package com.ifeng.bigtrade.finance.mapper;

import com.ifeng.bigtrade.finance.entites.FDailyBalance;
import com.ifeng.bigtrade.finance.entites.FDailyBalanceExample;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FDailyBalanceMapper
{
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@SelectProvider(type = FDailyBalanceSqlProvider.class, method = "countByExample")
	long countByExample(FDailyBalanceExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@DeleteProvider(type = FDailyBalanceSqlProvider.class, method = "deleteByExample")
	int deleteByExample(FDailyBalanceExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@Delete(
	{ "delete from f_dailybalance", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@Insert(
	{ "insert into f_dailybalance (id, addTime, ", "deleteStatus, accountCode, ", "b_date, creditAmount, ",
			"debitAmount, lastdayBalance, ", "todayBalance)",
			"values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, ",
			"#{deleteStatus,jdbcType=BIT}, #{accountCode,jdbcType=VARCHAR}, ",
			"#{b_date,jdbcType=TIMESTAMP}, #{creditAmount,jdbcType=DECIMAL}, ",
			"#{debitAmount,jdbcType=DECIMAL}, #{lastdayBalance,jdbcType=DECIMAL}, ",
			"#{todayBalance,jdbcType=DECIMAL})" })
	int insert(FDailyBalance record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@InsertProvider(type = FDailyBalanceSqlProvider.class, method = "insertSelective")
	int insertSelective(FDailyBalance record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@SelectProvider(type = FDailyBalanceSqlProvider.class, method = "selectByExample")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "accountCode", property = "accountCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "b_date", property = "b_date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "creditAmount", property = "creditAmount", jdbcType = JdbcType.DECIMAL),
			@Result(column = "debitAmount", property = "debitAmount", jdbcType = JdbcType.DECIMAL),
			@Result(column = "lastdayBalance", property = "lastdayBalance", jdbcType = JdbcType.DECIMAL),
			@Result(column = "todayBalance", property = "todayBalance", jdbcType = JdbcType.DECIMAL) })
	List<FDailyBalance> selectByExample(FDailyBalanceExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@Select(
	{ "select", "id, addTime, deleteStatus, accountCode, b_date, creditAmount, debitAmount, lastdayBalance, ",
			"todayBalance", "from f_dailybalance", "where id = #{id,jdbcType=BIGINT}" })
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "accountCode", property = "accountCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "b_date", property = "b_date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "creditAmount", property = "creditAmount", jdbcType = JdbcType.DECIMAL),
			@Result(column = "debitAmount", property = "debitAmount", jdbcType = JdbcType.DECIMAL),
			@Result(column = "lastdayBalance", property = "lastdayBalance", jdbcType = JdbcType.DECIMAL),
			@Result(column = "todayBalance", property = "todayBalance", jdbcType = JdbcType.DECIMAL) })
	FDailyBalance selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@UpdateProvider(type = FDailyBalanceSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") FDailyBalance record, @Param("example") FDailyBalanceExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@UpdateProvider(type = FDailyBalanceSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") FDailyBalance record, @Param("example") FDailyBalanceExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@UpdateProvider(type = FDailyBalanceSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(FDailyBalance record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_dailybalance
	 *
	 * @mbg.generated Wed Aug 23 18:06:10 CST 2017
	 */
	@Update(
	{ "update f_dailybalance", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "accountCode = #{accountCode,jdbcType=VARCHAR},",
			"b_date = #{b_date,jdbcType=TIMESTAMP},", "creditAmount = #{creditAmount,jdbcType=DECIMAL},",
			"debitAmount = #{debitAmount,jdbcType=DECIMAL},", "lastdayBalance = #{lastdayBalance,jdbcType=DECIMAL},",
			"todayBalance = #{todayBalance,jdbcType=DECIMAL}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(FDailyBalance record);

	/******************* next new add **********************/
	@Select(
	{ "select", "max(b_date)", "from f_dailybalance" })
	@ResultType(Date.class)
	Date selectMaxBdate();

	@Select(
	{ "select", "distinct b_date", "from f_dailybalance", "where b_date<#{time} order by b_date desc limit 1" })
	@ResultType(Date.class)
	Date selectpreviousDate(@Param("time") Date time);

	@Insert(
	{ "INSERT INTO f_dailybalance (addTime, deleteStatus, b_date, accountCode, lastdayBalance, debitAmount, creditAmount, todayBalance) ",
			"	SELECT #{nowtime}, 0, #{v_curDate}, a.code, IFNULL(b.todayBalance, 0), 0, 0, IFNULL(b.todayBalance, 0)  FROM f_accountitem a ",
			"	LEFT JOIN ((select * from f_dailybalance where b_date = #{v_lastDate}) b) on (b.accountCode = a.Code) ",
			"	where a.code not like '%/_' escape '/'" })
	int insertForSettleBalance(@Param("nowtime") Date nowtime, @Param("v_curDate") Date v_curDate,
			@Param("v_lastDate") Date v_lastDate);

	@Update(
	{ "	update f_dailybalance set debitAmount=#{damount} where b_date = #{v_curDate} and accountCode = #{dcode}" })
	int updateDebitamountByBdateAndAccountcode(@Param("damount") Double damount, @Param("v_curDate") Date v_curDate,
			@Param("dcode") String dcode);

	@Update(
	{ " update f_dailybalance set creditAmount=#{camount} where b_date = #{v_curDate} and accountCode = #{ccode}" })
	int updateCreditamountByBdateAndAccountcode(@Param("camount") Double camount, @Param("v_curDate") Date v_curDate,
			@Param("ccode") String ccode);

	@Update(
	{ "UPDATE f_dailybalance a ",
			"INNER JOIN ((SELECT IFNULL(SUM(debitAmount),0) as da, IFNULL(SUM(creditAmount),0) as ca FROM f_dailybalance fd, f_accountitem fa",
			" WHERE fd.b_date = #{v_curDate} AND fd.accountCode = fa.code AND fd.accountCode LIKE CONCAT(#{code},'%') AND fa.accountLevel = #{accountlevel}+1) b) ",
			"SET debitAmount=b.da, creditAmount = ca WHERE accountCode = #{code} AND a.b_date = #{v_curDate}" })
	int updateInbalanceAccount(@Param("v_curDate") Date v_curDate, @Param("code") String code,
			@Param("accountlevel") Integer accountlevel);

	@Update(
	{ "UPDATE f_dailybalance a, f_accountitem b ",
			"set a.todayBalance = a.lastdayBalance + (CASE b.dCFlag WHEN 'C' THEN a.debitAmount - a.creditAmount  ELSE a.creditAmount  - a.debitAmount  END ) ",
			"where a.b_date = #{v_curDate} and a.accountCode =b.code " })
	int updateTodaybanance(@Param("v_curDate") Date v_curDate);

	@SelectProvider(type = FDailyBalanceSqlProvider.class, method = "selectSettlement")
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectSettlement(String accountCode, String accountLevel, String beginDate,
			String endDate);

	@Select(
	{ "select", "*",
			"from (select DATE_FORMAT(a.b_date,'%Y-%m-%d') as b_date,a.accountcode,b.name,a.lastdaybalance,a.debitamount,a.creditamount,a.todaybalance,b.accountLevel,b.dCFlag from f_dailybalance a,f_accountitem b where a.accountcode=b.code) db",
			"where accountLevel=1 and b_date=DATE_FORMAT(#{time},'%Y-%m-%d') and dCFlag=#{DCFlag}" })
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectSettlementDailyReport(@Param("DCFlag") String DCFlag, @Param("time") Date time);
	
	@SelectProvider(type = FDailyBalanceSqlProvider.class, method = "selectTodayBalanceInCode")
	List<HashMap<String, Object>> selectTodayBalanceInCode(String accountArr);
}
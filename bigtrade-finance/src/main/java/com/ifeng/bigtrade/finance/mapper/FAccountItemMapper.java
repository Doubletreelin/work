package com.ifeng.bigtrade.finance.mapper;

import com.ifeng.bigtrade.finance.entites.FAccountItem;
import com.ifeng.bigtrade.finance.entites.FAccountItemExample;

import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FAccountItemMapper
{
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@SelectProvider(type = FAccountItemSqlProvider.class, method = "countByExample")
	long countByExample(FAccountItemExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@DeleteProvider(type = FAccountItemSqlProvider.class, method = "deleteByExample")
	int deleteByExample(FAccountItemExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@Delete(
	{ "delete from f_accountitem", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@Insert(
	{ "insert into f_accountitem (id, addTime, ", "deleteStatus, accountLevel, ", "code, name, dCFlag, ",
			"higherCode, canDelete)", "values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, ",
			"#{deleteStatus,jdbcType=BIT}, #{accountLevel,jdbcType=INTEGER}, ",
			"#{code,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{dCFlag,jdbcType=VARCHAR}, ",
			"#{higherCode,jdbcType=VARCHAR}, #{canDelete,jdbcType=BIT})" })
	@Options(keyProperty = "id", useGeneratedKeys = true)
	int insert(FAccountItem record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@InsertProvider(type = FAccountItemSqlProvider.class, method = "insertSelective")
	@Options(keyProperty = "id", useGeneratedKeys = true)
	int insertSelective(FAccountItem record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@SelectProvider(type = FAccountItemSqlProvider.class, method = "selectByExample")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "accountLevel", property = "accountLevel", jdbcType = JdbcType.INTEGER),
			@Result(column = "code", property = "code", jdbcType = JdbcType.VARCHAR),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dCFlag", property = "dCFlag", jdbcType = JdbcType.VARCHAR),
			@Result(column = "higherCode", property = "higherCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "canDelete", property = "canDelete", jdbcType = JdbcType.BIT) })
	List<FAccountItem> selectByExample(FAccountItemExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@Select(
	{ "select", "id, addTime, deleteStatus, accountLevel, code, name, dCFlag, higherCode, canDelete",
			"from f_accountitem", "where id = #{id,jdbcType=BIGINT}" })
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "accountLevel", property = "accountLevel", jdbcType = JdbcType.INTEGER),
			@Result(column = "code", property = "code", jdbcType = JdbcType.VARCHAR),
			@Result(column = "name", property = "name", jdbcType = JdbcType.VARCHAR),
			@Result(column = "dCFlag", property = "dCFlag", jdbcType = JdbcType.VARCHAR),
			@Result(column = "higherCode", property = "higherCode", jdbcType = JdbcType.VARCHAR),
			@Result(column = "canDelete", property = "canDelete", jdbcType = JdbcType.BIT) })
	FAccountItem selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@UpdateProvider(type = FAccountItemSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") FAccountItem record, @Param("example") FAccountItemExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@UpdateProvider(type = FAccountItemSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") FAccountItem record, @Param("example") FAccountItemExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@UpdateProvider(type = FAccountItemSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(FAccountItem record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_accountitem
	 *
	 * @mbg.generated Thu Aug 17 14:45:30 CST 2017
	 */
	@Update(
	{ "update f_accountitem", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "accountLevel = #{accountLevel,jdbcType=INTEGER},",
			"code = #{code,jdbcType=VARCHAR},", "name = #{name,jdbcType=VARCHAR},",
			"dCFlag = #{dCFlag,jdbcType=VARCHAR},", "higherCode = #{higherCode,jdbcType=VARCHAR},",
			"canDelete = #{canDelete,jdbcType=BIT}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(FAccountItem record);

	/******************** next new add **********************/
	@Select(
	{ "select", "*", "from f_accountitem ", "where ",
			"not exists (select * from f_accountitem where code like CONCAT(#{code},'%') and accountLevel>(select accountLevel from f_accountitem where code=#{code}))  and code =#{code}" })
	@ResultType(FAccountItem.class)
	FAccountItem getLeafAccountByCode(@Param("code") String code);

	@Select(
	{ "select", "*", "from f_accountitem ", "where ", "code =#{code}" })
	@ResultType(FAccountItem.class)
	FAccountItem selectAccountByCode(@Param("code") String code);

	@Select(
	{ "select max(accountLevel) max from f_accountitem" })
	@ResultType(Integer.class)
	int selectMaxAccountlevel();

	@Select({"select code,accountLevel,dCFlag from f_accountitem where accountLevel <#{v_lvl} order by accountLevel desc"})
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectByAccountLevel(@Param("v_lvl")int v_lvl);
	
	@Select({"select count(1) num from f_accountitem  where code like CONCAT(#{code},'%') and accountLevel=#{accountlevel}+1"})
	@ResultType(Integer.class)
	int selectCountBycodeAndAccountLevel(@Param("code")String code,@Param("accountlevel")Integer accountlevel);
}
package com.ifeng.bigtrade.finance.mapper;

import com.ifeng.bigtrade.finance.entites.FVoucher;
import com.ifeng.bigtrade.finance.entites.FVoucherExample;

import java.util.Date;
import java.util.HashMap;
import java.util.List;
import org.apache.ibatis.annotations.Delete;
import org.apache.ibatis.annotations.DeleteProvider;
import org.apache.ibatis.annotations.Insert;
import org.apache.ibatis.annotations.InsertProvider;
import org.apache.ibatis.annotations.Options;
import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.annotations.Result;
import org.apache.ibatis.annotations.ResultType;
import org.apache.ibatis.annotations.Results;
import org.apache.ibatis.annotations.Select;
import org.apache.ibatis.annotations.SelectProvider;
import org.apache.ibatis.annotations.Update;
import org.apache.ibatis.annotations.UpdateProvider;
import org.apache.ibatis.type.JdbcType;

public interface FVoucherMapper
{
	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@SelectProvider(type = FVoucherSqlProvider.class, method = "countByExample")
	long countByExample(FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@DeleteProvider(type = FVoucherSqlProvider.class, method = "deleteByExample")
	int deleteByExample(FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Delete(
	{ "delete from f_voucher", "where id = #{id,jdbcType=BIGINT}" })
	int deleteByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Insert(
	{ "insert into f_voucher (id, addTime, ", "deleteStatus, voucherNo, ", "summary_id, contractNo, ",
			"status, inputUser, ", "inputTime, confirmUser, ", "confirmTime, auditor, ", "auditTime, b_date, ",
			"fundFlowId, note)", "values (#{id,jdbcType=BIGINT}, #{addTime,jdbcType=TIMESTAMP}, ",
			"#{deleteStatus,jdbcType=BIT}, #{voucherNo,jdbcType=VARCHAR}, ",
			"#{summary_id,jdbcType=BIGINT}, #{contractNo,jdbcType=VARCHAR}, ",
			"#{status,jdbcType=VARCHAR}, #{inputUser,jdbcType=VARCHAR}, ",
			"#{inputTime,jdbcType=TIMESTAMP}, #{confirmUser,jdbcType=VARCHAR}, ",
			"#{confirmTime,jdbcType=TIMESTAMP}, #{auditor,jdbcType=VARCHAR}, ",
			"#{auditTime,jdbcType=TIMESTAMP}, #{b_date,jdbcType=TIMESTAMP}, ",
			"#{fundFlowId,jdbcType=BIGINT}, #{note,jdbcType=LONGVARCHAR})" })
	@Options(keyProperty = "id", useGeneratedKeys = true)
	int insert(FVoucher record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Options(keyProperty = "id", useGeneratedKeys = true)
	@InsertProvider(type = FVoucherSqlProvider.class, method = "insertSelective")
	int insertSelective(FVoucher record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@SelectProvider(type = FVoucherSqlProvider.class, method = "selectByExampleWithBLOBs")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "voucherNo", property = "voucherNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "summary_id", property = "summary_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "contractNo", property = "contractNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputUser", property = "inputUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputTime", property = "inputTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "confirmUser", property = "confirmUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "confirmTime", property = "confirmTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "auditor", property = "auditor", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditTime", property = "auditTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "b_date", property = "b_date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "fundFlowId", property = "fundFlowId", jdbcType = JdbcType.BIGINT),
			@Result(column = "note", property = "note", jdbcType = JdbcType.LONGVARCHAR) })
	List<FVoucher> selectByExampleWithBLOBs(FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@SelectProvider(type = FVoucherSqlProvider.class, method = "selectByExample")
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "voucherNo", property = "voucherNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "summary_id", property = "summary_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "contractNo", property = "contractNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputUser", property = "inputUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputTime", property = "inputTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "confirmUser", property = "confirmUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "confirmTime", property = "confirmTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "auditor", property = "auditor", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditTime", property = "auditTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "b_date", property = "b_date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "fundFlowId", property = "fundFlowId", jdbcType = JdbcType.BIGINT) })
	List<FVoucher> selectByExample(FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Select(
	{ "select", "id, addTime, deleteStatus, voucherNo, summary_id, contractNo, status, inputUser, ",
			"inputTime, confirmUser, confirmTime, auditor, auditTime, b_date, fundFlowId, ", "note", "from f_voucher",
			"where id = #{id,jdbcType=BIGINT}" })
	@Results(
	{ @Result(column = "id", property = "id", jdbcType = JdbcType.BIGINT, id = true),
			@Result(column = "addTime", property = "addTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "deleteStatus", property = "deleteStatus", jdbcType = JdbcType.BIT),
			@Result(column = "voucherNo", property = "voucherNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "summary_id", property = "summary_id", jdbcType = JdbcType.BIGINT),
			@Result(column = "contractNo", property = "contractNo", jdbcType = JdbcType.VARCHAR),
			@Result(column = "status", property = "status", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputUser", property = "inputUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "inputTime", property = "inputTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "confirmUser", property = "confirmUser", jdbcType = JdbcType.VARCHAR),
			@Result(column = "confirmTime", property = "confirmTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "auditor", property = "auditor", jdbcType = JdbcType.VARCHAR),
			@Result(column = "auditTime", property = "auditTime", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "b_date", property = "b_date", jdbcType = JdbcType.TIMESTAMP),
			@Result(column = "fundFlowId", property = "fundFlowId", jdbcType = JdbcType.BIGINT),
			@Result(column = "note", property = "note", jdbcType = JdbcType.LONGVARCHAR) })
	FVoucher selectByPrimaryKey(Long id);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@UpdateProvider(type = FVoucherSqlProvider.class, method = "updateByExampleSelective")
	int updateByExampleSelective(@Param("record") FVoucher record, @Param("example") FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@UpdateProvider(type = FVoucherSqlProvider.class, method = "updateByExampleWithBLOBs")
	int updateByExampleWithBLOBs(@Param("record") FVoucher record, @Param("example") FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@UpdateProvider(type = FVoucherSqlProvider.class, method = "updateByExample")
	int updateByExample(@Param("record") FVoucher record, @Param("example") FVoucherExample example);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@UpdateProvider(type = FVoucherSqlProvider.class, method = "updateByPrimaryKeySelective")
	int updateByPrimaryKeySelective(FVoucher record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Update(
	{ "update f_voucher", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "voucherNo = #{voucherNo,jdbcType=VARCHAR},",
			"summary_id = #{summary_id,jdbcType=BIGINT},", "contractNo = #{contractNo,jdbcType=VARCHAR},",
			"status = #{status,jdbcType=VARCHAR},", "inputUser = #{inputUser,jdbcType=VARCHAR},",
			"inputTime = #{inputTime,jdbcType=TIMESTAMP},", "confirmUser = #{confirmUser,jdbcType=VARCHAR},",
			"confirmTime = #{confirmTime,jdbcType=TIMESTAMP},", "auditor = #{auditor,jdbcType=VARCHAR},",
			"auditTime = #{auditTime,jdbcType=TIMESTAMP},", "b_date = #{b_date,jdbcType=TIMESTAMP},",
			"fundFlowId = #{fundFlowId,jdbcType=BIGINT},", "note = #{note,jdbcType=LONGVARCHAR}",
			"where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKeyWithBLOBs(FVoucher record);

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to
	 * the database table f_voucher
	 *
	 * @mbg.generated Wed Aug 16 15:02:37 CST 2017
	 */
	@Update(
	{ "update f_voucher", "set addTime = #{addTime,jdbcType=TIMESTAMP},",
			"deleteStatus = #{deleteStatus,jdbcType=BIT},", "voucherNo = #{voucherNo,jdbcType=VARCHAR},",
			"summary_id = #{summary_id,jdbcType=BIGINT},", "contractNo = #{contractNo,jdbcType=VARCHAR},",
			"status = #{status,jdbcType=VARCHAR},", "inputUser = #{inputUser,jdbcType=VARCHAR},",
			"inputTime = #{inputTime,jdbcType=TIMESTAMP},", "confirmUser = #{confirmUser,jdbcType=VARCHAR},",
			"confirmTime = #{confirmTime,jdbcType=TIMESTAMP},", "auditor = #{auditor,jdbcType=VARCHAR},",
			"auditTime = #{auditTime,jdbcType=TIMESTAMP},", "b_date = #{b_date,jdbcType=TIMESTAMP},",
			"fundFlowId = #{fundFlowId,jdbcType=BIGINT}", "where id = #{id,jdbcType=BIGINT}" })
	int updateByPrimaryKey(FVoucher record);

	/****************** next new add *********************/
	/**
	 * 查询当前凭证
	 * 
	 * @param summaryno 摘要号
	 * @param summaryname 摘要名称
	 * @param status 状态
	 * @param inputuser 录入人
	 * @param inputtime 录入时间
	 * @param audittime 审核时间
	 * @param auditor 审核人
	 * @return
	 */
	@SelectProvider(type = FVoucherSqlProvider.class, method = "selectCurrentVoucher")
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectCurrentVoucher(String summaryno, String summaryname, String status,
			String inputuser, String inputtime, String auditor, String audittime);

	/**
	 * 查询历史凭证
	 * 
	 * @param summaryno 摘要号
	 * @param summaryname 摘要名称
	 * @param inputuser 录入员
	 * @param bdate 凭证归属时间
	 * @return
	 */
	@SelectProvider(type = FVoucherSqlProvider.class, method = "selectHistoryVoucher")
	@ResultType(HashMap.class)
	List<HashMap<String, Object>> selectHistoryVoucher(String summaryno, String summaryname, String inputuser,
			String bdate);

	@Select(
	{ "select"," min(auditTime)"," from f_voucher","where !ISNULL(auditor)and (ISNULL(b_date) or b_date='')" })
	@ResultType(Date.class)
	Date selectMinAuditTimeWhichBdateNull();

	@Select(
	{ "select", "distinct DATE_FORMAT(t.auditTime,'%Y-%m-%d') balanceDate ", "from f_voucher t",
			"where t.status='audited' and t.b_date is null and t.auditTime> #{time} ",
			"group by balanceDate order by balanceDate " })
	@ResultType(String.class)
	List<String> selectCanSetBdate(@Param("time")String maxbdate);
	
	@Update({"update f_voucher set status='accounted' where status='audited' and id in (select voucher_id from f_accountbook where b_date>=#{time})"})
	int updateStatusInSettleBalance(@Param("time")Date time);
	
	@Update({"UPDATE f_voucher set b_date=null WHERE ((auditor is not null and auditTime between #{beginTime} and #{endTime}))"})
	int setBdateCompensation(@Param("beginTime")Date beginTime,@Param("endTime")Date endTime);
	
	@Update({"call close_finance_backup"})
	int backup();
}